<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->
<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->
<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->
<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>hugo</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>0.39</version>
    <!-- <packageSourceUrl>Where is this Chocolatey package located (think GitHub)? packageSourceUrl is highly recommended for the community feed</packageSourceUrl>-->
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <!--<owners>__REPLACE_YOUR_NAME__</owners>-->
    <!-- ============================== -->
    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>hugo</title>
    <authors>spf13</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>http://gohugo.io/</projectUrl>
    <iconUrl>https://github.com/spf13/hugo/raw/master/docs/static/img/hugo-logo-med.png</iconUrl>
    <!-- <copyright>Year Software Vendor</copyright> -->
    <!-- If there is a license Url available, it is is required for the community feed -->
    <!-- <licenseUrl>Software License Location __REMOVE_OR_FILL_OUT__</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>-->
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <!--<docsUrl>At what url are the software docs located?</docsUrl>-->
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>hugo admin blog website network</tags>
    <summary>A Fast and Flexible Static Site Generator built with love in GoLang</summary>
    <description>![Hugo](https://raw.githubusercontent.com/spf13/hugo/master/docs/static/img/hugo-logo.png)

A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in [Go](https://golang.org/).

[Website](https://gohugo.io) |
[Forum](https://discuss.gohugo.io) |
[Developer Chat (no support)](https://gitter.im/spf13/hugo) |
[Documentation](https://gohugo.io/overview/introduction/) |
[Installation Guide](https://gohugo.io/overview/installing/) |
[Contribution Guide](CONTRIBUTING.md) |
[Twitter](http://twitter.com/spf13)

[![GoDoc](https://godoc.org/github.com/spf13/hugo?status.svg)](https://godoc.org/github.com/spf13/hugo)
[![Linux and OS X Build Status](https://api.travis-ci.org/spf13/hugo.svg?branch=master&amp;label=Linux+and+OS+X+build "Linux and OS X Build Status")](https://travis-ci.org/spf13/hugo)
[![Windows Build Status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true&amp;label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/spf13/hugo/branch/master)
[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)
[![Go Report Card](https://goreportcard.com/badge/github.com/spf13/hugo)](https://goreportcard.com/report/github.com/spf13/hugo)

## Overview

Hugo is a static HTML and CSS website generator written in [Go][].
It is optimized for speed, easy use and configurability.
Hugo takes a directory with content and templates and renders them into a full HTML website.

Hugo relies on Markdown files with front matter for meta data.
And you can run Hugo from any directory.
This works well for shared hosts and other systems where you don’t have a privileged account.

Hugo renders a typical website of moderate size in a fraction of a second.
A good rule of thumb is that each piece of content renders in around 1 millisecond.

Hugo is designed to work well for any kind of website including blogs, tumbles and docs.

## Contributing to Hugo

We welcome contributions to Hugo of any kind including documentation, themes,
organization, tutorials, blog posts, bug reports, issues, feature requests,
feature implementations, pull requests, answering questions on the forum,
helping to manage issues, etc.

The Hugo community and maintainers are [very active](https://github.com/spf13/hugo/pulse/monthly) and helpful, and the project benefits greatly from this activity.

### Asking Support Questions

We have an active [discussion forum](http://discuss.gohugo.io) where users and developers can ask questions.
Please don't use the Github issue tracker to ask questions.

### Reporting Issues

If you believe you have found a defect in Hugo or its documentation, use
the Github issue tracker to report the problem to the Hugo maintainers.
If you're not sure if it's a bug or not, start by asking in the [discussion forum](http://discuss.gohugo.io).
When reporting the issue, please provide the version of Hugo in use (`hugo version`).

[![Analytics](https://ga-beacon.appspot.com/UA-7131036-6/hugo/readme)](https://github.com/igrigorik/ga-beacon)

</description>
    <!-- <releaseNotes>__REPLACE_OR_REMOVE__MarkDown_Okay</releaseNotes> -->
    <!-- =============================== -->
    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-uninstall.extension" />
    </dependencies>-->
    <!-- chocolatey-uninstall.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-uninstall.extension as a dependency. Please verify whether you are using a helper function from that package. -->
    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
    <owners>switchspan</owners>
    <docsUrl>https://gohugo.io/overview/introduction/</docsUrl>
    <releaseNotes># **0.39** April 16th 2018

## Notes


    The main.Execute function now returns a Response object and the global Hugo variable is removed. This is only relevant for people building some kind of API around Hugo.
    Remove deprecated File.Bytes 94c8b29c @bep

### Enhancements
#### Templates

    * Add anchorize template func 4dba6ce1 @bep
    * Add path.Join 880ca19f @bep
    * Add path.Split template func 01b72eb5 @bep

### Other

    * Implement Resource.Content 0e7716a4 @bep #4622
    * Make Page.Content a method that returns interface{} 417c5e2b @bep #4622
    * Remove accidental and breaking space in baseURL flag 1b4e0c41 @bep #4607
    * Properly handle CLI slice arguments 27a524b0 @bep #4607
    * Correctly handle destination and i18n-warnings bede93de @bep #4607
    * Allow "*/" inside commented out shortcodes 14c35c8a @bep #4608
    * Make commands.Execute return a Response object 96689a5c @bep #4598
    * Remove some TODOs e7010c1b @bep #4598
    * Add basic server test a7d00fc3 @bep #4598
    * Remove the Hugo global b110d0ae @bep #4598
    * Make the limit command work again 73825cfc @bep #4598
    * Move the commands related logic to its own file a8f7fbbb @bep #4598
    * Add CLI tests e8d6ca95 @bep #4598
    * Make the hugo command non-global 4d32f2fa @bep #4598
    * Extract some common types into its own file 018602c4 @bep #4598
    * Make the server command non-global 2f0d98a1 @bep #4598
    * Make the gen commands non-global e0621d20 @bep #4598
    * Make the list commands non-global e26a8b24 @bep #4598
    * Make the import commands non-global 2a2c9838 @bep #4598
    * Make the config command non-global 15b1e269 @bep #4598
    * Make the new commands non-global 56a13080 @bep #4598
    * Make convert command non-global 4b780ca7 @bep #4598
    * Make more commands non-global 7bc5e89f @bep #4598
    * Make benchmark non-global fdf1d94e @bep #4598
    * Start of flag cleaning 1157fef8 @bep #4598
    * Use short date format in CLI docs e614d8a5 @bep #4598
    * Update README.md fca49d6c @thedodobird2
    * Sync dependencies 0e8b3cbc @bep
    * Bump Go versions 230f2b8c @bep #4545
    * Add bash completion 874159b5 @anthonyfok
    * Handle mass content etc. edits in server mode 730b66b6 @bep #4563

### Fixes

    * Fix livereload of bundled pages f3775877 @bep #4607
    * Do not reset .Page.Scratch on rebuilds 61d52f14 @bep #4627
    * Fix failing Travis server test 9c782d51 @bep
    * Fix the config command f396cffa @bep #4598
    * Fix some flag diff 24d5c219 @bep #4598
    * Fix TestFixURL 1e233b1c @bep #4598
    * Disable shallow clone to fix TestPageWithLastmodFromGitInfo 094ec171 @anthonyfok #4584
    * Fix livereload for the home page bundle f87239e4 @bep #4576
    * Fix empty BuildDate in "hugo version" 294c0f80 @anthonyfok
    * Fix some livereload content regressions a4deaeff @bep #4566
    * Fix two tests that are broken on Windows 26f34fd5 @neurocline


</releaseNotes>
    <packageSourceUrl>https://github.com/switchspan/chocolatey-hugo</packageSourceUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <licenseUrl>https://github.com/spf13/hugo/blob/master/LICENSE.md</licenseUrl>
    <bugTrackerUrl>https://github.com/spf13/hugo/issues</bugTrackerUrl>
    <projectSourceUrl>https://github.com/spf13/hugo</projectSourceUrl>
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>